import cv2
import numpy as np
from skimage.util import img_as_float
from skimage.color import rgb2gray
from scipy import signal as sig
from scipy import ndimage as ndi



def Find_Local_Peaks(matrix):

    array_with_the_max_peak_coordinates = np.array(
        [0, 0],
        )
    #print(array_with_the_max_peak_coordinates)
    for i in range(len(matrix)):
        for j in range(len(matrix[i])):
            #print(matrix[i][j], end=' ')

            if matrix[i][j] >= matrix[array_with_the_max_peak_coordinates[0]][array_with_the_max_peak_coordinates[1]]:
                array_with_the_max_peak_coordinates[0] = i
                array_with_the_max_peak_coordinates[1] = j
    #print(array_with_the_max_peak_coordinates)

    return array_with_the_max_peak_coordinates

mat = np.array((
    [2, 3, 5, 10, 5],
    [2, 3, 5, 10, 5],
    [2, 3, 5, 10, 5],
    [2, 3, 5, 10, 5],
    [2, 3, 5, 10, 5]
    ))

for i in range(1 ,  len(mat) - 1):
    for j in range(1, len(mat[i]) - 1):

        window_matrix = np.array(mat[i-1:i + 2, j - 1:j + 2])

        max_coord = Find_Local_Peaks(window_matrix)
        print(max_coord)
        for x in range(len(window_matrix)):
            for y in range(len(window_matrix[x])):
                if x == max_coord[0] and y == max_coord[1]:
                    print("",end=" ")
                else:
                    mat[x + i - 1][y + j - 1] = 0



print(mat)